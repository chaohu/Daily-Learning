.386
STACK	SEGMENT	USE16	STACK
	DB	200	DUP(0)
STACK	ENDS
DATA	SEGMENT	USE16
NUMB	DW	35
	DW 	?
	DW	35	DUP(0)
A 	DW	0
TIP1	DB	0AH,'Please enter the number:$'
BUF	DB	12	DUP(?)
SIGN	DB	?
DATA	ENDS
CODE	SEGMENT	USE16
       	ASSUME	CS:CODE,DS:DATA,SS:STACK
START:  MOV 	AX,DATA
	MOV 	DS,AX
	LEA	BX,TIP1
	CALL	PLUS
	MOV	A,AX
	LEA	BX,TIP1
	CALL	PLUS
	ADD	AX,A
	MOV 	DX,16
	CALL	F2T10

PLUS	PROC
	MOV	DX,BX
	MOV	AH,9
	INT	21H
	LEA	DX,NUMB
	MOV	AH,10
	INT	21H
	LEA	SI,NUMB+2
	MOV	CX,NUMB+1
	MOV	DX,16
	CALL	F10T2
	RET
PLUS	ENDP

F2T10	PROC
	PUSH	EBX
	PUSH	SI
	LEA	SI,BUF
	CMP	DX,32
	JNE	B
	MOVSX	EAX,AX
B:	OR	EAX,EAX
	JNS	PLUS1
	NEG	EAX
	MOV 	BYTE	PTR	[SI],'-'
	INC	SI
PLUS1:	MOV 	EBX,10
	CALL	RADIX
	MOV 	BYTE	PTR	[SI],'$'
	LEA	DX,BUF
	MOV 	AX,9
	INT	21H
	POP	SI
	POP	EBX
	RET
F2T10	ENDP

RADIX	PROC
	PUSH	CX
	PUSH	EDX
	XOR	CX,CX
LOP1:	XOR	EDX,EDX
	DIV	EBX
	PUSH	DX
	INC	CX
	OR	EAX,EAX
	JNZ	LOP1
LOP2:	POP	AX
	CMP	AL,10
	JB	L1
	ADD	AL,7
L1:	ADD	AL,30H
	MOV 	[SI],AL
	INC	SI
	LOOP	LOP2
	POP	EDX
	POP	CX
	RET
RADIX	ENDP

F10T2	PROC
	PUSH	EBX
	MOV	EAX,0
	MOV	SIGN,0
	MOV	BL,[SI]
	CMP	BL,'+'
	JE	F10 
	CMP	BL,'-'
	JNE	NEXT2
	MOV	SIGN,1
F10:	DEC	CX
	JZ	ERR
NEXT1:	INC	SI
	MOV	BL,[SI]
NEXT2:	CMP	BL,'0'
	JB	ERR
	CMP	BL,9
	JA	ERR
	SUB	BL,30H
	MOVZX	EBX,BL
	IMUL	EAX,10
	JO	ERR
	ADD	EAX,EBX
	JO	ERR
	JS	ERR
	JC	ERR
	DEC	CX
	JNZ	NEXT1
	CMP	DX,16
	JNE	PP0
	CMP	EAX,7FFFH
	JA	ERR
PP0:	CMP	SIGN,1
	JNE	QQ
	NEG	EAX
QQ:	POP	EBX
	RET
ERR:	MOV 	SI,-1
	JMP	QQ
F10T2	ENDP

CODE	ENDS
	END	START