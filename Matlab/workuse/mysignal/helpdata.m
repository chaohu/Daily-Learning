clear

help1_1={...
      ' '
   ' 实验一  连续时间系统的时域分析――卷积计算    expt1_1.m'
   ' '
   ' '
   ' 在线性系统的时域分析方法中，卷积是个很重要的概念，占有重要地位。'
   ' 只要知道了系统在单位冲激信号作用下的零状态响应即系统的单位冲激响应 h(t)，'
   ' 就可以利用卷积积分求出系统在任何激励 x(t) 作用下的零状态响应 Yzs(t)。'
   ' 在本实验中通过输入 x(t)、h(t)，得到 x(t)*h(t) 的直观图形表示，'
   ' 通过修改 x(t)、h(t) 参数，可以验证卷积基本性质。'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 选择输入激励 x(t) 的形式'
   '        本实验中给出了四种激励形式，有单位冲激信号 δ(at-b)、阶跃信号 u(at-b)、'
   '        三角信号 Triangle(center,width) 和门函数 Gate(center,width)。'
   ' '
   '     2. 给出输入激励 x(t) 的波形参数'
   '        其中三角信号和门函数的波形参数 center 控制波形中心位置，'
   '        波形参数 width 控制波形宽度。'
   ' '
   '     3. 选择单位冲激响应 h(t) 的形式，并给出波形参数'
   '        方法同输入激励 x(t) 的操作。'
   ' '
   '     4. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design1_1.m 给出解析法求解连续时间卷积的 MATLAB 主程序。'
   '     x(t)、h(t)为门函数，以采样周期 T 进行采样离散化得到有限序列 x 和 h；'
   '     利用 MATLAB 指令 conv 完成 x 和 h 的卷积，结果存入序列y 中；'
   '     最后利用 MATLAB 绘图指令 plot 以连续图形方式显示 x(t)、h(t) 和 y(t)。'
   '     其中 x(t)=u(t-2)-u(t-4) 为从 2 到 4，高度为1的门函数（中心在3，宽度为2）；'
   '          h(t)=u(t-3)-u(t-5) 为从 3 到 5，高度为1的门函数（中心在4，宽度为2）。'
   '          可以通过修改序列 x 和 h 的生成式，可以得到不同信号的卷积结果。'
   ' '
   '     注意：由于数值计算只能对有限长序列进行，所以必须对被卷函数作有限长采样；'
   '           当抽样不会引起截尾误差时，输出响应的时间区间为 [tx1+th1,tx2+th2]；'
   '           当抽样出现截尾误差时，要取无截尾误差的非平凡区间 [tx1+th1,min(tx1+th2,tx2+th1)]；'
   '           例如对阶跃函数进行有限长采样时，必将引入截尾误差。'
   ' '
   '           %  design1_1.m'
   '           T=0.01;  % 取样周期'
   '           tx=2:T:4;'
   '           x=rectpuls((tx-3),2);  % 关于 rectpuls 函数，参看 help rectpuls'
   '           th=3:T:5;'
   '           h=rectpuls((th-4),2);  '
   '           t=(2+3):T:(4+5);  % 两个门函数卷积不会出现截尾误差'
   '           y=conv(x,h);  % 卷积结果'
   '           figure'
   '           subplot(3,1,1);  % 多子图显示，将图形框分为 3x1 个子图，1号子图显示 x'
   '           plot(tx,x)'
   '           ylabel(''输入激励'');'
   '           subplot(3,1,2);  % 2号子图显示 h'
   '           plot(th,h)'
   '           ylabel(''单位冲激响应'');'
   '           subplot(3,1,3);  % 3号子图显示 y'
   '           plot(t,y)' 
   '           ylabel(''输出响应'');'
   ' '
   ' '
   '      请实验者自行编程实现下列连续时间信号的卷积'
   '        1. x(t)=exp(-t)*[u(t)-u(t-2)]，  h(t)=2*[u(t)-u(t-2)]；'
   '        2. x(t)=[1-|t|/4]*[u(t+4)-u(t-4)]，  h(t)=u(t)。'
   ' '
   ' '
   ' '
   ' '};
name1_1='帮助  实验一  连续时间系统的时域分析――卷积计算';
help1_2={...
      ''
   ' 实验一  连续时间系统的时域分析――微分方程求解    expt1_2.m'
   ' '
   ' '
   ' 本实验以一阶 RL（或 RC）电路为例，讨论微分方程的建立和求解问题。'
   ' 在一阶 RL 电路中，若激励为电压源 E(t)，输出响应为电感电流 I(t)，'
   ' 则描述系统的微分方程为：'
   '           L*dI(t)/dt+R*I(t)=E(t)'
   ' 只要给定 E(t) 和初始状态 I(0_) 的值，就可以求出完全响应 I(t)；'
   ' 在一阶 RC 电路中，若激励为电压源 E(t)，输出响应为电容电压 U(t)，'
   ' 则描述系统的微分方程为：'
   '           R*C*dU(t)/dt+U(t)=E(t)'
   ' 只要给定 E(t) 和初始状态 U(0_) 的值，就可以求出完全响应 U(t)。'
   ' 在本实验中通过输入激励电压 E(t) 和电路参数 R、L、C 得到不同形式下的系统输出响应。'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 选择激励电压源的形式'
   '        本实验中激励电压源有三种形式可供选择：'
	'            au(t)、exp(-at)u(t)、asin(wt)u(t)'
   '        波形参数 a、w 由键盘输入。'
   ' '
   '     2. 选择电路组成形态'
   '        实验者可以选择分析一阶 RL 或一阶 RC 电路来进行分析，'
   '        由键盘输入电路参数。包括：'
   '        电阻值 R、电感值 L（或电容值 C）和电感电流初始值 I(0)（或电容电压 U(0)）'
   ' '
   '     3. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design1_2.m 给出仿真法求解常系数微分方程的 MATLAB 主程序。'
   '     考虑输入激励电压为阶跃信号 u(t)，离散化采样周期为 T，以一阶 RL 电路为例。'
   '     描述系统的微分方程为：'
   '               L*dI(t)/dt+R*I(t)=E(t)'
   '     得到微分方程的系数向量分别为 a=[ L,R ]，b=[ 1 ]；'
   '     利用 MATLAB 函数 desolve 对常系数微分方程表征的连续时间系统，'
   '     求系统的响应。'
   ' '
   '     注意：当输入激励分别为单位脉冲和单位阶跃时，'
   '           可以利用 MATLAB 命令 impulse 和 step 计算连续时间系统的单位脉冲和单位阶跃响应，'
   '           请实验者自行验证。'
   ' '
   '           %  design1_2.m'
   '           R=100;  % 电阻值'
   '           L=1;  % 电感值'
   '           I0=2;  % 电感电流初始值'
   '           S=[num2str(L),''*Dy+'',num2str(R),''*y=Heaviside(t)''];  % 得到微分方程的字符串表达式'
   '           init=[''y(0)='',num2str(I0)];  % 得到初始条件的字符串表达式'
   '           y=dsolve(S,init,''t'');  % 求解微分方程，得到符号解'
   '           t=0:0.01:2*pi;'
   '           x=ones(1,length(t))  % 得到时间范围 t 内的阶跃信号 u(t) 的离散抽样序列 x'
   '           figure'
   '           subplot(1,2,1);  % 多子图显示，将图形框分为 1x2 个子图，1号子图显示阶跃信号 x'
   '           plot(t,x)'
   '           title(''激励电压'');'
   '           subplot(1,2,2);  % 2号子图显示输出响应 ys'
   '           ezplot(y)'
   '           title(''输出响应'');'
   ' '
   ' '
   '      请实验者自行编程实现下列微分方程求解'
   '        1. 一阶 RC 电路：E(t)=u(t-2)，  R=10，  C=4，  U0=2；'
   '        2. 一阶微分方程：dY(t)/dt+0.5*Y(t)=X(t)；'
   '        3. 二阶微分方程：4*dY^2(t)/dt^2+Y(t)=dX(t)/dt-0.5*X(t) （注意系数补零）。'
   ' '
   ' '
   ' '};
name1_2='帮助  实验一  连续时间系统的时域分析――微分方程求解'; 
help2_1={...
      ' '
   ' 实验二  信号的 Fourier 分析――周期信号的频谱分析    expt2_1.m'
   ' '
   ' '
   ' Fourier 级数的理论告诉我们：任何周期信号只要满足 Dirichlet 条件'
   ' 就可以表示为许多指数分量之和（指数 Fourier 级数）'
   ' 或许多正弦、余弦分量之和（三角 Fourier 级数）。'
   ' 一般情况下，任意周期信号表示为 Fourier 级数时，需要无穷多项才能完全逼近原函数。'
   ' 在实际应用中，我们经常采用有限项级数来代替无限项级数，'
   ' 所选项数越多，有限项级数越逼近原函数，均方误差越小。'
   ' 在本实验中，我们可以在图形方式下，'
   ' 直观地观察到取不同项数时有限项级数 fN(t) 逼近原函数 f(t) 的情况。'
   ' 同时，还绘出该信号的幅度频谱图。'
   ' 通过本实验，可以比较直观的了解 Fourier 级数的物理意义，'
   ' 并观察到级数中各频率分量对波形的影响。'
   ' 选取的 Fourier 级数项越多，所合成的波形 fN(t) 中的峰值越靠近 f(t) 的不连续点。'
   ' 理论上，随着项数 N 的增加，该峰值趋于一个常数，约等于跳变值的 9%，'
   ' 并从不连续点开始逐渐震荡衰减，此即 Gibbs 现象。'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 选择周期信号波形'
   '        本实验提供了四种周期波形的 Fourier 级数逼近：'
   '        矩形脉冲、半余弦脉冲、锯齿波和方波，囊括了偶、奇函数，偶谐、奇谐函数的波形。'
   '        实验者可由直观图形观察它们所包含的谐波分量的特点。'
   ' '
   '     2. 输入参数'
   '        需要输入的参数包括：周期波形的周期 T，希望看到的谐波次数 N。'
   ' '
   '     3. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design2_1.m 给出符号法进行周期信号的频谱分析的 MATLAB 主程序。'
   '     本脚本文件实现占空比 tao/T=1/5 的矩形脉冲信号的周期频谱的直观展示。'
   '     首先得到周期信号在一个周期（[-T/2,T/2]）内的表达式，'
   '     然后利用符号积分的方法得到 Fourier 级数系数的符号表达式，'
   '     最后进行符号求和，并作图进行直观演示。'
   ' '
   '           % design2_1.m'
   '           T=10;  % 周期信号周期'
   '           N=20;  % 希望看到的谐波次数'
   '           syms t T k;  % 定义时间 t、周期 Ta、下标 k 三个符号'
   '           % 锯齿脉冲基础波形，[-T/2,T/2]，τ/T=1/5'
   '           y=subs(sym(''Heaviside(t+T/10)-Heaviside(t-T/10)''),''T'',T);  '
   '           A0=int(y,t,-T/2,T/2)/T;  % 直流分量 A0'
   '           % 利用符号法得到各频率分量的复数 Fourier 系数 Ak 的符号表达式'
   '           Ak=int(y*exp(-2*i*pi*k*t/T),t,-T/2,T/2)/T;'
   '           % 利用 symmul 命令得到 Ak*exp(2*j*k*pi*t/T) 的符号表达式'
   '           fk=symmul(Ak,sym(exp(2*i*k*pi*t/T)));'
   '           % 计算 k 在区间 [-N,N] 内的 Fourier 系数，存入向量 a（长度为 2*N+1）'
   '           for m=-N:-1'
   '              a(m+N+1)=numeric(subs(Ak,k,m));'
   '           end'
   '           a(N+1)=numeric(A0);'
   '           for m=1:N'
   '              a(m+N+1)=numeric(subs(Ak,k,m));'
   '           end  % for'
   '           % 利用 symmul 命令进行符号求和，得到综合信号'
   '           f=symsum(fk,k,-N,-1)+A0+symsum(fk,k,1,N);'
   ' '
   '           % 图形显示结果'
   '           figure'
   '           n=-N:N;'
   '           as=abs(a)*2;  % 由 Fourier 系数得到频谱幅度'
   '           subplot(3,1,1)'
   '           ezplot(y,[-T,T])'
   '           ylabel(''原函数'');'
   '           subplot(3,1,2)'
   '           ezplot(f,[-T,T])'
   '           ylabel(''合成函数'');'
   '           subplot(3,1,3)'
   '           stem(n,as)'
   '           ylabel(''幅度频谱图'');'
   ' '
   ' '
   '     请实验者自行编程实现下列周期信号的频谱分析'
   '       1. 不同占空比下的矩形脉冲：T=10*τ、20*τ；'
   '       2. 区间 [-5,5] 内，y=t/5；其余，y=0；'
   '       3. 本实验中进行符号积分求 Fourier 级数系数时，利用 [-T/2,T/2] 区间进行积分，'
   '          所以必须给出这一区间内的波形表达式，请实验者自己考虑实现区间 [0,T] 上的实现方法。'
   ' '
   ' '};
name2_1='帮助  实验二  信号的 Fourier 分析――周期信号的频谱分析';
help2_2={...
      ' '
   ' 实验二  信号的 Fourier 分析―― Fourier 变换的性质及应用    expt2_2.m'
   ' '
   ' '
   ' Fourier 级数推广到非周期信号中推导出 Fourier 变换。'
   ' 频谱函数 F(jw) 与原函数 f(t) 构成 Fourier 变换对，定义式参考《信号与线性系统》教材。'
   ' 频谱函数 F(jw) 是一个复函数，'
   ' 它的模量 |F(jw)| 代表信号中各频率分量的相对大小，曲线称为非周期信号的幅度频谱；'
   ' 相角 angle(w) 代表有关频率分量的相位，曲线称为非周期信号的相位频谱。'
   ' 本实验包容了几乎所有常见信号的 Fourier 变换对，并能同时提供2组4个波形，'
   ' 便于实验者直观了解信号的时域、频域波形和验证 Fourier 变换性质。'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 选择第一组信号 f1(t) 的波形'
   '        本实验中包含的信号波形有：'
   '            单位冲激 δ(at+b)'
   '            单位阶跃 u(at+b)'
   '            单边指数 e^(-at)u(t)'
   '            指数脉冲 te^(-at)u(t)'
   '            减幅正弦 e^(-at)sin(wt)u(t)'
   '            阶跃正弦 sin(wt)u(t)'
   '            阶跃余弦 cos(wt)u(t)'
   '            抽样函数 Sa(wt+b)'
   '            矩形脉冲 Gate(center,width)'
   '            三角脉冲 Triagle(center,width)'
   '            升余弦 Up_cos(T)'
   '            半余弦 Half_cos(T)'
   '         几乎包容了所有常见信号，实验者可由直观图形观察它们的函数波形和频谱波形。'
   '         验证延时特性：选取 f(t) 和 f(t-b)，幅频曲线相同，只有相位不同'
   '         验证移频特性：选取 u(t) 和 cos(wt)u(t) 或 sin(wt)u(t)'
   '         验证对称特性：选取 Sa(at) 和 Gate(center,width)'
   '         验证尺度变换特性：选取 f(t) 和 f(at)'
   '         验证奇偶特性：选取偶函数，如：Gata(center,width)'
   '         等等。'
   ' '
   '     2. 输入第一组信号的波形参数'
   ' '
   '     3. 选择第二组信号波形并输入波形参数，方法同第一组'
   '        可以通过选择和第一组相同的信号，但输入不同的参数来验证 Fourier 变换的性质。'
   ' '
   '     4. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design2_2.m 给出符号法求解 Fourier 变换的 MATLAB 主程序。'
   '     本脚本文件实现指数脉冲 texp(-2t)u(t) 的 Fourier 变换'
   ' '
   '           % design2_2.m'
   '           sym t;'
   '           f=sym(''t*exp(-2*t)*Heaviside(t)'');  % 信号的符号表达式'
   '           F=fourier(f);  % 得到 Fourier 变换的符号表达式'
   '           FF=maple(''convert'',F,''radical'');  % 对 Fourier 变换的符号表达式进行转换，使其便于画图'
   '           FFF=abs(FF);  % 得到频谱符号表达式'
   '           figure'
   '           subplot(1,2,1)'
   '           ezplot(f,[-2*pi,2*pi])'
   '           title(''时域波形f(t)'');'
   '           subplot(1,2,2)'
   '           ezplot(FFF,[-2*pi,2*pi])'
   '           title(''频域波形F(jw)'');'
   ' '
   ' '
   '     请实验者自行编程实现下列信号的 Fourier 变换'
   '       1. 门函数脉冲 f(t)=u(t+2)-u(t-2)；'
   '       2. 区间 [-1,1] 内，f(t)=1-|t|；其余，f(t)=0。'
   ' '
   ' '
   ' '};
name2_2='帮助  实验二  信号的 Fourier 分析―― Fourier 变换的性质及应用';
help3_1={...
      ' '
   ' 实验三  连续时间系统的频域分析――连续时间系统的频域分析    expt3_1.m'
   ' '
   ' '
   ' 频域分析法与时域分析法的不同之处主要在于信号分解的单元函数不同。'
   ' 在频域分析法中，信号分解成一系列不同幅度、不同频率的等幅正弦函数，'
   ' 通过求取对每一单元激励产生的响应，并将响应叠加，再转换到时域以得到系统的总响应。'
   ' 所以说，频域分析法是一种变域分析法。'
   ' 它把时域中求解响应的问题通过 Fourier 级数或 Fourier 变换转换成频域中的问题；'
   ' 在频域中求解后再转换回时域从而得到最终结果。'
   ' 在实际应用中，多使用另一种变域分析法：复频域分析法，即 Laplace 变换分析法。'
   ' 本实验中，利用系统函数 H(s)|s=jw 来确定系统的频率特性 H(jw)。'
   ' 系统函数 H(s) 为有理函数，分子、分母为多项式。'
   ' 幅度响应为 |H(jw)|，相位响应为 arg[H(jw)] 以图形方式直观演示。'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 输入分子多项式的系数向量'
   '        按照 s 降幂的顺序输入。'
   '        如：s^2+2s+1，输入顺序为：[1 2 1]'
   ' '
   '     2. 输入分母多项式的系数向量'
   '        按照 s 降幂的顺序输入。'
   '        如：2s^4+3s^3+4s^2+s+2，输入顺序为：[2 3 4 1 2]'
   ' '
   '     3. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design3_1.m 给出连续时间系统频域分析法的 MATLAB 主程序。'
   '     本脚本文件分析的系统传递函数为'
   '                                      s^2 + 2 s + 1'
   '           H(s) =  ----------------------------------------------'
   '                            2 s^4 + 3 s^3 + 4 s^2 +  s + 2' 
   '      并绘制幅频响应对数曲线和相频响应曲线。'
   ' '
   '           % design3_1.m'
   '           b=[1,2,1];  % 分子系数向量'
   '           a=[2,3,4,1,2];  % 分母系数向量'
   '           printsys(b,a,''s'')'
   '           [Hz,w]=freqs(b,a);'
   '           w=w./pi;'
   '           magh=abs(Hz);'
   '           zerosIndx=find(magh==0);'
   '           magh(zerosIndx)=1;'
   '           magh=20*log10(magh);  % 以分贝'
   '           magh(zerosIndx)=-inf;'
   '           angh=angle(Hz);'
   '           angh=unwrap(angh)*180/pi;  % 角度换算'
   '           figure'
   '           subplot(1,2,1)'
   '           plot(w,magh);'
   '           grid on'
   '           xlabel(''特征角频率(\times\pi rads/sample)'')'
   '           title(''幅频特性曲线 |H(w)| (dB)'');'
   '           subplot(1,2,2)'
   '           plot(w,angh);'
   '           grid on'
   '           xlabel(''特征角频率 (\times\pi rads/sample)'')'
   '           title(''相频特性曲线 \theta(w) (degrees)'');'
   ' '
   ' '
   '     请实验者自行编程实现下列系统的频域分析'
   '       1. H(s)=m/(1+s(m-m^2))，m 取值区间 [0,1]，绘制一组曲线 m=0.1,0.3,0.5,0.7,0.9；'
   '       2. H(s)=(b2s^2+b1s+b0)/(a2s^2+a1^s+a0)，'
   '          通过取不同的 [a2,a1,a0]、[b2,b1,b0] 实现低通、高通、带通、全通滤波器的频率特性分析。'
   ' '
   ' '
   ' '};
name3_1='帮助  实验三  连续时间系统的频域分析――连续时间系统的频域分析';
help3_2={''};
name3_2='';
help4_1={...
      ' '
   ' 实验四  Laplace 逆变换及应用―― Laplace 变换的性质    expt4_1.m'
   ' '
   ' '
   ' 在线性时不变系统分析和研究中，Laplace 变换是一种很常用的变换域分析方法。'
   ' 它把时域中求解响应的问题通过 Laplace 变换转换成复频域中的问题进行分析；'
   ' 在复频域中求解后再通过 Laplace 逆变换还原为时间原函数。'
   ' 它把时域中输入输出之间的卷积运算转化为变换域中的乘法运算，在此基础上建立了'
   ' 系统函数的概念，系统单位冲激响应 h(t) 的 Laplace 变换。'
   ' 本实验最后绘制 系统函数 H(s) 的极、零图和原函数 h(t) 的波形。'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 输入系统增益系数'
   '        系统增益系数不能为零。'
   ' '
   '     2. 输入由系统零点构成的零点向量'
   '        如果系统无零点，请不要输入任何值'
   '        因为如果输入零，系统将认为有一个取值为零的零点。'
   ' '
   '     3. 输入由系统极点构成的极点向量'
   '        如果系统无极点，请不要输入任何值'
   '        因为如果输入零，系统将认为有一个取值为零的极点。'
   ' '
   '     4. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' 注意：'
   '     系统极点数目一定不能比零点数目少，否则无法构造系统函数。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design4_1.m 给出 Laplace 逆变换的 MATLAB 主程序。'
   '     在 MATLAB 中，系统可以通过三种方式进行描述：'
   '     传递函数型、零极点型以及状态变量型。'
   '     本脚本文件采用输入零点、极点向量，再转换得到传递函数型描述，并转换成符号表达式，'
   '     然后利用 MATLAB 命令 ilaplace 得到系统函数的 Laplace 逆变换，'
   '     最后以图形直观显示原函数和极、零图。'
   ' '
   '           % design4_1.m'
   '           %                    2 s^2 + 6 s + 5'
   '           %   H(s)  = -------------------------'
   '           %                        s^2 +  s'
   '           z=[-1.5+0.5i,-1.5-0.5i];  % 零点向量 '
   '           p=[-1,0];  % 极点向量'
   '           k=2;  % 增益系数'
   '           [num,den]=zp2tf(z'',p'',k);  % 由零、极点型系统描述得到传递函数型描述'
   '           printsys(num,den,''s'')'
   '           % 得到系统函数的符号表达式'
   '           a1=poly2sym(num);'
   '           a2=poly2sym(den);'
   '           a=a1/a2;'
   '           ft=ilaplace(a);'
   '           figure'
   '           subplot(1,2,1)'
   '           rlocus(num,den)'
   '           title(''像函数 F(s) 极、零图'');'
   '           subplot(1,2,2)'
   '           ft=maple(''convert'',ft,''radical'');'
   '           ezplot(ft,[0,4*pi])'
   '           title(''时域原函数f(t)'');'
   ' '
   ' '
   '     请实验者自行编程实现下列系统的频域分析'
   '       1. h(s)=2(s+5)/((s+1)(s+3)(s+4))；'
   '       2. h(s)=(2s+2)/(s^3+9s^2+26s+24)。'
   ' '
   ' '
   ' '};
name4_1='帮助  实验四  Laplace逆变换及应用――Laplace变换的性质';
help4_2={...
      ' '
   ' 实验四  Laplace 逆变换及应用――高速 Laplace 逆变换算法    expt4_2.m'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 输入分子多项式的系数向量'
   '        按照 s 降幂的顺序输入。'
   '        如：s^2+2s-3，输入顺序为：1 2 -3'
   ' '
   '     2. 输入分母多项式的系数向量'
   '        按照 s 降幂的顺序输入。同上'
   ' '
   '     3. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design4_2.m 给出高速 Laplace 逆变换算法的 MATLAB 主程序。'
   ' '
   '           % design4_2.m'
   '           %       5'
   '           % -------------'
   '           %   5 s^2 + s'
   '           syms s;'
   '           a=sym(5/(5*s^2+s))  %系统传递函数符号表达式'
   '           ft=ilaplace(a);'
   '           ft=maple(''convert'',ft,''radical'');'
   '           figure'
   '           ezplot(ft,[0,4*pi])'
   '           title(''时域原函数f(t)'');'
   '     请实验者自行编程实现下列系统的高速 Laplace 逆变换'
   '       1. h(s)=(s+1)/s^2+s+1；'
   '       2. h(s)=(1-s)/s(s+1)。'
   ' '
   ' '};
name4_2='帮助  实验四  Laplace 逆变换及应用――高速 Laplace 逆变换算法';
help5_1={...
      ' '
   ' 实验五  离散时间系统的时域分析――离散卷积计算    expt5_1.m'
   ' '
   ' '
   ' 对于线性移不变离散时间系统，如果已经知道了系统的单位冲激响应 h(n)，'
   ' 就可以利用离散卷积求出系统在任何激励 x(n) 作用下的零状态响应 Yzs(n)。'
   ' 在本实验中通过输入序列 x(n)、h(n)，得到 x(n)*h(n) 的直观图形表示，'
   ' 在离散卷积中，多讨论有限长序列。'
   ' 若 x(n) 和 h(n) 长度分别为 M 和 N，'
   ' 则卷积结果即响应序列 y(n) 也是有限长序列，长度为 L=M+N-1。'
   ' 上式形象描述了离散卷积中两个有限长序列反褶、移位、相乘、累加的过程'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 输入有限长序列 x(n)'
   '        以空格分隔数字'
   ' '
   '     2. 输入有限长序列 h(n)'
   ' '
   '     3. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design5_1.m 给出离散卷积计算的 MATLAB 主程序。'
   '     利用 MATLAB 卷积命令 conv 完成卷积，本脚本默认两个离散序列都是从 n=1 开始，'
   '     请考虑如果两个有限长序列分属于不同的区间，该如何实现卷积？'
   ' '
   '           % design5_1.m'
   '           x=[1 2 3 2 4 5];'
   '           h=[1 -1 4 2];'
   '           y=conv(x,h);'
   '           figure'
   '           subplot(3,1,1)'
   '           stem(x)'
   '           ylabel(''激励x(n)'');'
   '           subplot(3,1,2)'
   '           stem(h)'
   '           ylabel(''冲激响应h(n)'');'
   '           subplot(3,1,3)'
   '           stem(y)'
   '           ylabel(''输出响应y(n)'');'
   '           text={...'
   '              '' '''
   '              ''  输入序列 x='''
   '              '' '''
   '              ['' ''*ones(1,12),num2str(x,''%8g'')]'
   '              '' '''
   '              ''  单位冲激响应序列 h='''
   '              '' '''
   '              ['' ''*ones(1,12),num2str(h,''%8g'')]'
   '              '' '''
   '              ''  响应序列 y='''
   '              '' '''
   '              ['' ''*ones(1,12),num2str(y,''%8g'')]'
   '              '' ''};'
   '           textwin(''卷积结果――数值表示'',text)'
   ' '
   ' '
   '     请实验者自行编程实现下列系统的频域分析'
   '       1. x(n)=[1 2 3 6 2]，n=[4:8]；h(n)=[1 0 2]，n=[1:3]；（请参考 conv_m.m）'
   '       2. x(n)=sin(n)，n=[1:5]；h(n)=[1 -1 3]，n=[1:3]。'
   ' '
   ' '
   ' '};
name5_1='帮助  实验五  离散时间系统的时域分析――离散卷积计算';
help5_2={...
      ' '
   ' 离散时间系统的时域分析――差分方程求解    expt5_2.m'
   ' '
   ' '
   ' 描述线性移不变离散时间系统激励和输出之间关系的数学模型是常系数差分方程。'
   ' 本实验适用差分方程形式为：'
   '         a(0)y(k)+a(1)y(k-1)+...+a(N)y(k-N)=b(0)x(k)+b(1)x(k-1)+...+b(N)x(k-N)'
   ' 求解差分方程最常用的方法是迭代解法（见脚本 design5_x2.m），'
   ' 也是实现数字滤波器的一种基本方法。'
   ' 在本实验中利用 MATLAB 命令 filter 求出差分方程完全解。'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 输入希望看到的输出样点数'
   ' '
   '     2. 输入差分方程系数向量'
   '        输入顺序为：{a(0) a(1) ... a(N)},{b(0) b(1) ... b(N)}。'
   '        其中 N+1 为差分方程两边系数最大数目，'
   '        如果有一边输入系数个数小于 N+1，将按剩余系数为零计算。'
   ' '
   '     3. 输入系统初始状态向量'
   '        输入顺序为 {y(0) y(-1) ...y(-N+1)}'
   ' '
   '     4. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design5_2.m 给出差分方程求解的 MATLAB 主程序。'
   '     在本脚本中首先通过 filtic 函数得到计算差分方程所需的初始值 {y(0) y(1) ... y(N-1)}，'
   '     然后利用 filter 函数进一步求出零输入响应、单位冲激响应'
   '     以及在单位阶跃信号激励下的全响应和零状态响应'
   ' '
   '           % design5_2.m'
   '           % y(k)-y(k-1)+0.35y(k-2)=2x(k)-x(k-1)'
   '           N=2;  % 差分方程阶数'
   '           a=[1 -1 0.35];  % 差分方程系数向量 a(0)~a(N)'
   '           b=[2 -1];  % 差分方程系数向量 b(0)~b(N)'
   '           k=20;  % 输出样点数目'
   '           zi=[2 1];  % 初始状态 N 个'
   '           yzi=[0*ones(1,k+N+1)];'
   '           h=yzi;'
   '           yzs=yzi;'
   '           for n=1:N'
   '              yzi(n)=zi(N-n+1);'
   '           end'
   '           y=yzi;'
   '           n=[-N:k];'
   '           x=impseq(0,-N,k);'
   '           h(N+1:end)=filter(b,a,x(N+1:end));'
   '           x=stepseq(0,-N,k);'
   '           zic=filtic(b,a,zi);'
   '           yzs(N+1:end)=filter(b,a,x(N+1:end));'
   '           yzi(N+1:end)=filter([0 0],a,x(N+1:end),zic);'
   '           y(N+1:end)=filter(b,a,x(N+1:end),zic);'
   '           figure'
   '           subplot(3,1,1)'
   '           stem(n,x)'
   '           title(''激励x(n)'');'
   '           subplot(3,1,2)'
   '           stem(n,h)'
   '           title(''冲激响应h(n)'');'
   '           subplot(3,1,3)'
   '           hold on'
   '           stem(n,yzs,''g'')'
   '           stem(n,yzi,''r'')'
   '           stem(n,y)'
   '           hold off'
   '           legend(''yzs'',''yzs'',''yzi'',''yzi'',''y'',''y'')'
   '           title(''输出响应y(n)'');'
   '           text={...'
   '              '' '''
   '              ''  单位冲激响应h='''
   '              '' '''
   '              ['' ''*ones(1,12),num2str(h)]'
   '              '' '''
   '              ''  零状态响应yzs='''
   '              '' '''
   '              ['' ''*ones(1,12),num2str(yzs)]'
   '              '' '''
   '              ''  零输入响应yzi='''
   '              '' '''
   '              ['' ''*ones(1,12),num2str(yzi)]'
   '              '' '''
   '              ''  全响应y='''
   '              '' '''
   '              ['' ''*ones(1,12),num2str(y)]'
   '              '' ''};'
   '           textwin(''差分方程迭代解法数值解'',text)'
   ' '
   ' '
   '     请实验者自行编程实现下列系统的频域分析 （迭代法和滤波器法）'
   '       1. y(n)=(1/3)[x(n)+x(n-1)+x(n-2)]+0.95y(n-1)-0.9025y(n-2)，'
   '          y(0)=0,y(-1)=2；'
   '       2. y(n)=0.81y(n-2)+x(n)-x(n-2)。'
   ' '
   ' '
   ' '};
name5_2='帮助  实验五  离散时间系统的时域分析――差分方程求解';
help6_1={...
      ' '
   ' 实验六  离散系统的Z域分析――离散系统的Z域分析    expt6_1.m'
   ' '
   ' '
   ' 对于离散时间系统，系统的频率特性 H(e^jw) 可以由系统函数 H(z) 得到，'
   ' 关系式为：H(e^jw)=H(z)|z=e^jw。'
   ' 由于系统频率特性 H(e^jw) 具有周期性和对称性，'
   ' 因此研究系统幅频特性 |H(e^jw)|、相频特性 arg[H(e^jw)]，'
   ' 只要在 0≤w≤pi 范围内讨论即可。'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 输入分子多项式的系数向量'
   '        按照 z 降幂的顺序输入。'
   '        如：2z^2+3z+1，输入顺序为：2 3 1'
   ' '
   '     2. 输入分母多项式的系数向量'
   '        按照 z 降幂的顺序输入。'
   '        如：z^3+2z^2+3z+2，输入顺序为：1 2 3 2'
   ' '
   '     3. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design6_1.m 给出离散系统的Z域分析的 MATLAB 主程序。'
   '     分析下面形式的系统传递函数'
   '                              z'
   '           H(z) = -------------'
   '                          z - α'
   '      当 α=0 时，系统呈全通特性；'
   '      当 -1<α<0 时，系统呈高通特性；'
   '      当 0<α<1 时，系统呈低通特性。'
   '      这一分析说明，在系统结构一定时，其频率特性随参数 α 变化而变化。'
   '      本脚本文件选取 α=-0.5，0，0.5 三个值进行计算，'
   '      并绘制幅频响应对数曲线和相频响应曲线。'
   ' '
   '           % design6_1.m'
   '           figure'
   '           alpha=[-0.5,0,0.5];'
   '           colorn=[''b'' ''m'' ''c'']'
   '           for n=1:3'
   '              b=[1 0];  % 分子系数向量'
   '              a=[1 alpha(n)];  % 分母系数向量'
   '              printsys(b,a,''z'')'
   '              [Hz,w]=freqz(b,a);'
   '              w=w./pi;'
   '              magh=abs(Hz);'
   '              zerosIndx=find(magh==0);'
   '              magh(zerosIndx)=1;'
   '              magh=20*log10(magh);'
   '              magh(zerosIndx)=-inf;'
   '              angh=angle(Hz);'
   '              angh=unwrap(angh)*180/pi;'
   '              subplot(1,2,1)'
   '              plot(w,magh,colorn(n));'
   '              hold on'
   '              subplot(1,2,2)'
   '              plot(w,angh,colorn(n));'
   '              hold on'
   '           end'
   '           subplot(1,2,1)'
   '           hold off'
   '           xlabel(''特征角频率(\times\pi rads/sample)'')'
   '           title(''幅频特性曲线 |H(w)| (dB)'');'
   '           subplot(1,2,2)'
   '           hold off'
   '           xlabel(''特征角频率 (\times\pi rads/sample)'')'
   '           title(''相频特性曲线 \theta(w) (degrees)'');'
   ' '
   ' '
   '     请实验者自行编程实现下列系统的Z域分析'
   '       1. H(z)=(1-z^(-2))/(1-0.81z^(-2))，|z|>0.9。'
   ' '
   ' '
   ' '};
name6_1='帮助  实验六  离散系统的Z域分析――离散系统的Z域分析';
help6_2={''};
name6_2='';
help7_1={...
      ' '
   ' 实验七  状态变量分析法――状态变量分析法    expt7_1.m'
   ' '
   ' '
   ' 无论时域分析法还是变换域分析法，着眼点仅在于系统的激励与响应之间的关系，'
   ' 并不涉及系统内部某些参量在信号转换过程中的变化，'
   ' 这样的分析方法称为端口法或输入-输出描述法。'
   ' 当我们需要设计和控制系统内部的一些变量以达到最佳控制目的，'
   ' 就需要借助于状态变量分析法来研究系统。'
   ' 对系统进行状态变量分析，'
   ' 首先要列出状态方程，'
   ' 然后对状态方程求解状态变量。'
   ' 对于 LTI 系统，状态方程可以表示为状态变量和激励信号的线性组合，即'
   '             X''=A*X+B*E'
   ' 这是一个一阶矢量微分方程，矢量 X 是 n 维的。'
   ' 本实验中假设状态变量个数为 2，激励个数为 4，'
   ' 激励源分别为 δ(t)、u(t)、sin(t)、e^(-t)。'
   '        即    X=[x1(t) x2(t)]；'
   '              X''=[x1''(t) x2''(t)]；'
   '              E=[δ(t) u(t) sin(t) e^(-t)]''；'
   '              A=[a11 a12;a21 a22]；'
   '              B=[b11 b12 b13 b14;b21 b22 b23 b24]。'
   ' 实验者只要输入状态变量 x1(t)、x2(t) 的初始值和系数矩阵 A、B 的值，'
   ' 以及时间步长的值，就可以得到以上形式状态方程的数值解。'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 输入时间步长'
   ' '
   '     2. 输入状态变量 x1(t)、x2(t) 的初始值 x1(0)、x2(0)'
   ' '
   '     3. 输入系数矩阵 A、B 的值'
   '        系数矩阵 A 大小为 2x2，B 大小为 2x4 ，请按下面格式输入，注意空格和分号的使用。'
   '              A=[1 0;0 1]'
   '              B=[1 0 0 0;0 -1 0 1]'
   ' '
   '     4. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design7_1.m 给出连续时间系统频域分析法的 MATLAB 主程序。'
   '     本脚本文件用仿真法实现一阶矢量微分方程的求解。'
   '     由于在 MATLAB 中系统的状态变量型描述需要 4 个参数，'
   '     状态方程系数矩阵 A、B 和输出方程系数矩阵 C、D，'
   '     最后以直观图形显示状态变量和输出响应的解。'
   ' '
   '          % design 7_1.m'
   '          dt=0.15;'
   '          i=[2 1];'
   '          a=[1 0;0 1];'
   '          b=[1 0 0 0;0 -1 0 1];'
   '          c=[1 0;0 1];'
   '          d=[0 0 0 0;0 0 0 0];'
   '          u1=mycal(1,dt);'
   '          u2=mycal(2,dt);'
   '          u3=mycal(3,dt);'
   '          u4=mycal(4,dt);'
   '          u=[u1;u2;u3;u4];'
   '          t=0:dt:2*pi;'
   '          SYS=SS(a,b,c,d);'
   '          [ys,ts,xs]=lsim(SYS,u,t,i);'
   '          figure'
   '          subplot(2,1,1)'
   '          hold on'
   '          plot(t,xs(:,1),''b'')'
   '          plot(t,xs(:,2),''m'')'
   '          legend(''x1(t)'',''x2(t)'')'
   '          hold off'
   '          title(''状态变量 x1(t) x2(t)'')'
   '          subplot(2,1,2)'
   '          hold on'
   '          plot(t,ys(:,1),''b'')'
   '          plot(t,ys(:,2),''m'')'
   '          legend(''y1(t)'',''y2(t)'')'
   '          hold off'
   '          title(''输出响应 y1(t) y2(t)'')'
   ' '
   ' '
   '     请实验者自行编程实现下列状态方程求解'
   '       1. [x1'';x2'']=[-1 -1;2 -2/3]*[x1;x2]+[0.5;0](2u(t)),'
   '          [y1;y2]=[1 0;2 0.5]*[x1;x2]+[1;0.5](2u(t)),[x1(0);x2(0)]=[2;-1]；'
   '       2. 请自己选择一个电路，列出状态方程，然后编程求解。'
   ' '
   ' '};
name7_1='帮助  实验七  状态变量分析法――状态变量分析法';
help7_2={''};
name7_2='';
help8_1={...
      ' '
   ' 实验八  线性系统稳定性分析――线性系统稳定性分析    expt8_1.m'
   ' '
   ' '
   ' 所谓稳定系统，是指对于有现有限（有界）激励只能产生有限（有界）响应的系统。'
   ' 在复频域中，要判断一个反馈系统是否稳定，'
   ' 就要看系统函数 T(s) 的极点是否全部在左半平面，'
   ' 或者要看系统特征方程的根是否全部为负值。'
   ' 系统无论有无反馈，其特征方程都可以写成'
   '           a(n)*s^n+a(n-1)*s^(n-1)+...+a(1)*s+a(0)=0'
   ' 本实验就是利用 Routh-Hurwitz 判据根据特征方程的根和系数之间的关系，'
   ' 判断这个方程有没有根是正实部的。'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 输入特征方程系数向量'
   '        a(n)、a(n-1)...a(1)、a(0)'
   ' '
   '     2. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design8_1.m 给出线性系统稳定性分析的 MATLAB 主程序。'
   '     本脚本文件分析下面的反馈系统在 K 取不同值时，系统的稳定性。'
   '                                                          K'
   '     系统函数为  T(s) = ----------------------------------'
   '                                           s^3 + 5 s^2 + 4 s + K'
   '     分别对 K 取 -5、10、25 进行分析，最后以文本形式给出结果。'
   ' '
   '          % design8_1.m'
   '          K=[-5 10 25];'
   '          text={};'
   '          blank={'' '''
   '             '' '''
   '             '' ''};'
   '          for n=1:3'
   '             a=[1 5 4 K(n)];'
   '             [d,flag]=poly2routh(a);'
   '             [row,col]=size(d);'
   '             if isempty(d)'
   '                text1={'' '''
   '                   ['' K='',num2str(K(n))] '
   '                   '' ''};'
   '             else'
   '                text1={'' '''
   '                   ['' K='',num2str(K(n))]'
   '                   '' '''
   '                   '' Routh-Hurwitz 阵列如下所示'''
   '                   '' '''
   '                   ['' ''*ones(row,10),num2str(d)]'
   '                   '' ''};'
   '             end'
   '             text2=[text1;flag];'
   '             text=[text;blank;text2];'
   '          end'
   '          H0=figure;'
   '          H_text=uicontrol(H0,''style'',''listbox'',...'
   '             ''BackgroundColor'',[1 1 1],...'
   '             ''max'',2,...'
   '             ''Enable'',''inactive'', ...'
   '             ''Value'',[],...'
   '             ''string'','' '',...'
   '             ''unit'',''normalized'',...'
   '             ''position'',[0.05 0.05 0.9 0.9],...'
   '             ''horizontal'',''left'');'
   '          set(H_text,''string'',text)'
   ' '
   ' '
   '     请实验者自行编程实现下列系统特征方程的稳定性分析'
   '       1. 系统特征方程为 s^4 +  s^3 + 2 s^2 + 2 s + 3=0；'
   '       2. 系统特征方程为 s^5 +  s^4 + 3 s^3 + 3 s^2 + 2 s + 2=0;'
   ' '
   ' '};
name8_1='帮助  实验八  线性系统稳定性分析――线性系统稳定性分析';
help8_2={''};
name8_2='';
help9_1={...
      ' '
   ' 实验九  离散 Fourier 变换 (DFT)――DFT 计算    expt9_1.m'
   ' '
   ' '
   ' 对于一个长度为 N 的有限长序列 x(n)，其离散 Fourier 变换定义为'
   '            X(K)=DFT[x(n)]=∑x(n)*exp(-2*pi*n*K/N)'
   ' 其中 X(K) 称为 x(n) 的 DFT 系数，是一个长度为 N 的有限长序列。'
   ' 在 MATLAB 环境下实现 DFT 和 IDFT 非常容易：'
   '            X=Wn*x    \mytoolbox\mysignal\dft.m'
   '            x=Wn`*X/N    \mytoolbox\mysignal\idft.m'
   ' 本实验对输入离散序列 x(n) 求解 DFT 系数 X(K)，'
   ' 最后以幅度、相位图显示结果。'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 输入取样点数'
   '        即有限长序列 x(n) 的长度'
   ' '
   '     2. 输入信号表达式'
   '        注意自变量为 n'
   '        例：  x(n)=cos(0.48*pi*n)+cos(0.52*pi*n)'
   ' '
   '     3. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design9_1.m 给出 DFT 计算的 MATLAB 主程序。'
   '     本脚本文件考虑离散信号 x(n)=exp(-0.1*n)，'
   '     取 0≤n≤30 时的 DFT 系数 X(K)；'
   '     最后以直观图形形式给出幅度响应和相位响应。'
   ' '
   ' '
   '           % design9_1.m'
   '           N=30;'
   '           n=0:N;'
   '           x=exp(-0.1*n);'
   '           figure'
   '           subplot(3,1,1)'
   '           stem(n,x)'
   '           ylabel(''原序列x(n)'');'
   '           X=dft(x,N+1);'
   '           magX=abs(X);'
   '           angX=angle(X);'
   '           angX=unwrap(angX)*180/pi;'
   '           subplot(3,1,2)'
   '           stem(n,magX)'
   '           ylabel(''幅度响应 |X(K)|'');'
   '           subplot(3,1,3)'
   '           stem(n,angX)'
   '           ylabel(''相位响应 \theta(K)'');'
   ' '
   ' '
   '     请实验者自行编程实现下列系统特征方程的稳定性分析'
   '       1. x(n)=cos(0.48*pi*n)+cos(0.52*pi*n)，0≤n≤10；'
   ' '
   ' '
   ' '};
name9_1='帮助  实验九  离散Fourier变换(DFT)――DFT计算';
help9_2={...
      ' '
   ' 实验九  离散 Fourier 变换 (DFT)――DFT 的实序列对称性    expt9_2.m'
   ' '
   ' '
   ' 对一个长度为 N 的实序列 x(n)，可以分解为奇偶分量'
   '                         {        x(0)                              n=0'
   '            xec =   {'
   '                         {  0.5*[x(n)+x(N-n)]         1≤n≤N+1'
   ' '
   '                         {         0                                 n=0'
   '            xoc =   {'
   '                         {  0.5*[x(n)-x(N-n)]         1≤n≤N+1'
   ' '
   ' 其相应的 DFT 为'
   '            DFT[xec(n)]=Re[X(K)]=Re[X(-K)|N]'
   '            DFT[xoc(n)]=Im[X(K)]=Im[X(-K)|N]'
   ' '
   ' 本实验以直观图形显示有限长实序列 x(n) 的奇、偶分量 xec(n)、xoc(n)，'
   ' x(n) 的 DFT 系数 X(K) 的实部、虚部分量'
   ' 及 xec(n) 和 xoc(n) 的 DFT。'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 输入取样点数'
   '        即有限长序列 x(n) 的长度'
   ' '
   '     2. 输入信号表达式'
   '        注意自变量为 n'
   '        例：  x(n)=10*(0.8).^n'
   ' '
   '     3. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design9_2.m 给出验证 DFT 的实序列对称性的 MATLAB 主程序。'
   '     本脚本文件考虑离散信号 x(n)=10*(0.8).^n，取 0≤n<30'
   '     最后以直观图形显示有限长实序列 x(n) 的奇、偶分量 xec(n)、xoc(n)，'
   '     x(n) 的 DFT 系数 X(K) 的实部、虚部分量'
   '     及 xec(n) 和 xoc(n) 的 DFT。'
   ' '
   '           % design9_2.m'
   '           N=30;'
   '           T=0.1;'
   '           n=0:N-1;'
   '           x=10*(0.8).^n;'
   '           [xec,xoc]=circevod(x);'
   '           X=dft(x,N);'
   '           Xec=dft(xec,N);'
   '           Xoc=dft(xoc,N);'
   '           figure'
   '           subplot(3,2,1)'
   '           stem(n,xec)'
   '           ylabel(''偶分量xec(n)'');'
   '           subplot(3,2,2)'
   '           stem(n,xoc)'
   '           ylabel(''奇分量xoc(n)'');'
   '           subplot(3,2,3)'
   '           stem(n,real(X))'
   '           ylabel(''DFT[x(n)]的实部分量'');'
   '           subplot(3,2,4)'
   '           stem(n,imag(X))'
   '           ylabel(''DFT[x(n)]的虚部分量'');'
   '           subplot(3,2,5)'
   '           stem(n,real(Xec))'
   '           ylabel(''DFT[xec(n)]'');'
   '           subplot(3,2,6)'
   '           stem(n,imag(Xoc))'
   '           ylabel(''DFT[xoc(n)]'');'
   ' '
   ' '
   '     请实验者自行选取其它有限长序列编程实现。'
   ' '
   ' '};
name9_2='帮助  实验九  离散Fourier变换(DFT)――DFT的实序列对称性';
help10_1={...
      ' '
   ' 实验十  快速 Fourier 变换 (FFT及其应用)――FFT的实现    expt10_1.m'
   ' '
   ' '
   ' DFT 的快速算法――FFT 算法基本上分为两类：'
   ' 时域抽选 FFT ( DIT-FFT )和频域抽选 FFT ( DIF-FFT )。'
   ' 在 MATLAB 中，可直接利用 fft 函数进行计算，'
   ' 它是由 MATLAB 系统本身提供的。'
   ' IFFT（逆 FFT）同样可由 ifft 函数直接计算。'
   ' 本实验对输入信号 x(t)，以 t=0.01*n(n=0:N-1) 进行抽样，'
   ' 得到 N 点序列 x(n)，求 N 点 DFT 的幅值谱。'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 输入信号表达式'
   '        注意自变量为 t'
   '        例：  x(t)=2*sin(4*pi*t)+5*cos(8*pi*t)'
   ' '
   '     2. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design10_1.m 给出实现 FFT 的 MATLAB 主程序。'
   '     本脚本文件通过 MATLAB 命令实现 x(t)=2*sin(4*pi*t)+5*cos(8*pi*t)，'
   '     以 t=0.01*n(n=0:N-1) 进行抽样，求 N 点 DFT 的幅值谱，'
   '     N 分别为 45、65。'
   '     在这个基础上，在信号中加入正态噪声 w(t)'
   '     x(t)=2*sin(4*pi*t)+5*cos(8*pi*t)+w(t)'
   '     再求 N 点 DFT 的幅值谱 (N=45、65)，'
   '     比较有无噪声时的信号谱，可以观察到'
   '     在信号检测时，这种噪声不会影响信号的检测。'
   ' '
   '           % design10_1.m'
   '           figure'
   '           ct=''2*sin(4*pi*t)+5*cos(8*pi*t)'';'
   '           NUM1=45;'
   '           NUM2=65;'
   '           number=0:NUM1-1;'
   '           number1=number*2*pi/NUM1;'
   '           t=0.01*number;'
   '           x=eval(ct);'
   '           X1=fft(x,NUM1);'
   '           xw=x+randn(1,NUM1);'
   '           Y1=fft(xw,NUM1);'
   '           number=0:NUM2-1;'
   '           t=0.01*number;'
   '           number2=number*2*pi/NUM2;'
   '           x=eval(ct);'
   '           X2=fft(x,NUM2);'
   '           xw=x+randn(1,NUM2);'
   '           Y2=fft(xw,NUM2);'
   '           subplot(2,2,1)'
   '           plot(number1,abs(X1))'
   '           title(''FFT N=45'');'
   '           subplot(2,2,2)'
   '           plot(number2,abs(X2))'
   '           title(''FFT N=65'');'
   '           subplot(2,2,3)'
   '           plot(number1,abs(Y1))'
   '           title(''FFT N=45(正态噪声）'');'
   '           subplot(2,2,4)'
   '           plot(number2,abs(Y2))'
   '           title(''FFT N=65(正态噪声）'');'
   ' '
   ' '
   '     请实验者自行选取其它有限长序列编程实现时间抽选 FFT 算法'
   ' '
   ' '};
name10_1='帮助  实验十  快速 Fourier 变换 (FFT及其应用)――FFT 的实现';
help10_2={...
      ' '
   ' 实验十  快速 Fourier 变换 (FFT及其应用)――循环卷积的实现    expt10_2.m'
   ' '
   ' '
   ' 工作中我们常常利用 FFT 来计算两个序列 x(n)(长度为 N) 和 h(n)(长度为 M) 的线性卷积。'
   ' 两个有限长序列的线性卷积可以用循环卷积来代替，'
   ' 但必须用补零的方法使 x(n)和h(n)都延长至 L 点有限长序列，L=N+M-1。'
   ' 循环卷积可以用 FFT 进行计算，又称为快速卷积。'
   ' 在 MATLAB 中，这一计算过程可用 fftconv 函数实现。'
   ' 另一种基于 fft 的计算方法实现快速卷积的方法可用 circonvt 函数实现，'
   ' '
   ' '
   ' 实验步骤：'
   '     1. 输入有限长序列 x(n)'
   '        注意以空格分隔输入的数值'
   ' '
   '     2. 输入有限长序列 h(n)'
   '        注意以空格分隔输入的数值'
   ' '
   '     3. 鼠标单击确定按钮，进行实验；'
   '        鼠标单击帮助按钮，进入本帮助界面；'
   '        鼠标单击关闭按钮，关闭本实验。'
   ' '
   ' '
   ' 设计性实验内容：'
   '     下面的脚本文件 design10_2.m 给出循环卷积的 MATLAB 主程序。'
   '     本脚本采用扩展函数 circonvt 实现循环卷积，'
   '     该函数编程实现是基于 FFT 的算法，而不是利用 FFT 的性质实现的。'
   '     利用 FFT 性质实现快速卷积的函数为 fftconv。'
   ' '
   '           % design10_2.m'
   '           x=[1 0 -1 0 1 2 4 5 8 6 5 4 2 0 ];'
   '           h=[1 2 0 -2  -1 -2 ];'
   '           N=max(length(x),length(h));'
   '           y=circont(x,h,length(x)+length(h)-1);  % 循环卷积函数 circonvt'
   '           figure'
   '           subplot(3,1,1)'
   '           nx=0:length(x)-1;'
   '           stem(nx,x)'
   '           ylabel(''输入激励序列 x'');'
   '           subplot(3,1,2)'
   '           nh=0:length(h)-1;'
   '           stem(nh,h)'
   '           ylabel(''单位冲激响应序列 h'');'
   '           subplot(3,1,3)'
   '           ny=0:length(y)-1;'
   '           stem(ny,y)'
   '           ylabel(''输出响应序列 y'');'
   ' '
   ' '
   '     请实验者自行选取有限长数列实现循环卷积（）'
   '     分别利用函数 circonvt 和 fftconv，结果相同'
   ' '
   ' '};
name10_2='帮助  实验十  快速 Fourier 变换 (FFT及其应用)――循环卷积'; 
data=struct(...
   'helptext',{help1_1,help1_2;help2_1,help2_2;...
      help3_1,help3_2;help4_1,help4_2;...
      help5_1,help5_2;help6_1,help6_2;...
      help7_1,help7_2;help8_1,help8_2;...
      help9_1,help9_2;help10_1,help10_2},...
   'helpname',{name1_1,name1_2;name2_1,name2_2;...
      name3_1,name3_2;name4_1,name4_2;...
      name5_1,name5_2;name6_1,name6_2;...
      name7_1,name7_2;name8_1,name8_2;...
      name9_1,name9_2;name10_1,name10_2});

pp=pwd;
pp=[pp,'\mysignal\helpdata.mat'];
save(pp)
