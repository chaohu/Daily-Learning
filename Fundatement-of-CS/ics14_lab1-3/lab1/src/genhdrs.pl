#!/usr/bin/perl

#######################################################################
#
# genhdrs.pl - Driver Library header file generator
#
# This program uses the values defined in a Perl lab configuration
# file to autogenerate a C or Perl header file for the Driver Library
# package (e.g., Driverlib.pm or driverlib.c). Autogenerating this file
# allows us to have a single config file for the instructor to update.
#
#######################################################################

use strict 'vars';
use Getopt::Std;
use Socket;

# Generic settings 
$| = 1;      # Flush stdout each time
umask(0077); # Files created in /tmp readable only by user
$ENV{PATH} = "/usr/local/bin:/usr/bin:/bin";

#
# usage - print help message and terminate
#
sub usage {
    printf STDERR "$_[0]\n";
    printf STDERR "Usage: $0 [-h] -l <lab> -p <file> -t c|perl\n";
    printf STDERR "Options:\n";
    printf STDERR "  -h          Print this message.\n";
    printf STDERR "  -l <lab>    Lab name (e.g., datalab)\n";
    printf STDERR "  -p <file>   Config file pathname (e.g., ../Datalab.pm)\n";
    printf STDERR "  -t c|perl   Type of output config file to generate.\n";  
    die "\n";
}

##############
# Main routine
##############

my $pathname;
my $lab;
my $filetype;
my $package;

my $comment1;
my $comment2;

# Parse the command line arguments
no strict;
getopts('hl:p:t:');
if ($opt_h) {
    usage();
}
$pathname = $opt_p;
$lab = $opt_l;
$filetype = $opt_t;

#
# Check the command line arguments for correctness
#
if (!pathname) {
    usage("Missing pathname (-p)");
}
if (!$lab) {
    usage("Missing lab name (-l)");
}
if (!$filetype) {
    usage("Missing output file type (-t)");
}
if ($filetype ne "c" and $filetype ne "perl") {
    usage("Unknown output file type ($filetype)");
}
use strict 'vars';

#
# Dynamically load the Lab configuration file
#
do "$pathname"
    or die "Unable to load $pathname.\n";


# Extract the config file's package name from it's pathname
$pathname =~ /(\w+)\.pm/;
$package = $1;

# Initialize the header comments common to all output formats
$comment1 = "This file contains configuration variables for drivers."; 
$comment2 = "It was generated by genhdrs.pl. Do not modify it."; 

#
# Generate the header file. 
#
if ($filetype eq "perl") {
    print "#\n";
    print "# $comment1\n";
    print "# $comment2\n";
    print "#\n";
    print "package Driverhdrs;\n";
    print "\n";
    print "\$LAB = \"$lab\";\n";
    print "\$SERVER_NAME = \"${ $package . '::SERVER_NAME' }\";\n";
    print "\$SERVER_PORT = ${ $package . '::RESULTD_PORT' };\n";
    print "\$COURSE_NAME = \"csapp\";\n";
    print "\$AUTOGRADE_TIMEOUT = 0;\n";
    print "1;\n";
}

if ($filetype eq "c") {
    print "/*\n";
    print " * $comment1\n";
    print " * $comment2\n";
    print " */\n";
    print "\#define LAB \"$lab\"\n";
    print "\#define SERVER_NAME \"${ $package . '::SERVER_NAME' }\"\n";
    print "\#define SERVER_PORT ${ $package . '::RESULTD_PORT' }\n";
    print "\#define COURSE_NAME \"csapp\"\n";
    print "\#define AUTOGRADE_TIMEOUT 0\n";
}

exit(0);
