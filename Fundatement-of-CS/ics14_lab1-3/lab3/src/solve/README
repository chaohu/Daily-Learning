#####################################################################
# CS:APP Buffer Lab
#
# Directory of scripts that automatically solve the buffer bomb.
#
# Copyright (c) 2003-2011, R. Bryant and D. O'Hallaron.
#####################################################################

This directory contains code that automatically generates a solution
for an arbitrary userid and level.

The program solve.pl is the master solver. It takes as arguments -u
<userid> and -l {0|1|2|3|4} to solve for the given the userid and
level. Emits the solution in file of the form
{smoke,fizz,bang,boom,kaboom}-<userid>.txt.

An optional -s flag allows you to send the results to the grading
server. This is very useful when you are first setting up the lab and
testing things out.

NOTE: In order to use the -s flag, you'll need to have a notifying
buffer bomb in src/bufbomb, and be running run the servers. From the
bufbomb/ directory:

    linux> ./makebomb.pl -n
    linux> ./make start

Each solution file is interspersed with descriptive comments, which is
very useful when you helping students solve their bombs.

Use "make clean" to remove all of the solution files. 

The master solver invokes the following helper programs to generate
solutions for each level. These scripts invoke gdb on the binary to
get the relevant program parameters.  Some generate assembly code,
while others directly generate the exploit string. You never need to
call them yourself.

smoke.pl:  level 0 (candle)
fizz.pl:   level 1 (sparkler)
bang.pl:   level 2 (firecracker)
boom.pl:   level 3 (dynamite)
kaboom.pl: level 4 (nitro)

Examples:
    # Generate a level 0 solution for user bovik in bovik-smoke.txt	
    linux> ./solve.pl -u bovik -l 0 

    # Generate a solution for level 1 and send it to the autograding server
    linux> ./solve.pl -s -u bovik -l 1 

	# Test a solution locally
	linux> cat smoke-bovik.txt | ../hex2raw | ../bufbomb -u bovik


